# .zshenv is always sourced and should contain variables exported to
# other programs, such as $PATH, $EDITOR and so on.
# .zshenv → [.zprofile if login] → [.zshrc if interactive]
#  → [.zlogin if login] → [.zlogout if cleanup before logout].

CLICOLOR=1                          # Enable colorized output
CASE_SENSITIVE="true"               # Uncomment the following line to use case-sensitive completion.

#
# User configuration
#
export MANPATH="/usr/local/man:$MANPATH"
export PATH="$HOME/.local/bin:/usr/local/bin:/usr/local/sbin:$PATH"
export SSH_KEY_PATH="~/.ssh/rsa_id"     # Default ssh key
export LANG=no_NO.UTF-8                 # Language settings
export LC_ALL=no_NO.UTF-8               # Language settings


# fzf
export FZF_BASE=$(brew --prefix fzf)

# Using GNU getopt
export FLAGS_GETOPT_CMD="$(brew --prefix gnu-getopt)/bin/getopt"

# PostgreSQL client (Keg only)
test -d /usr/local/opt/libpq/bin/ && export PATH="/usr/local/opt/libpq/bin/:$PATH"

# Homebrew
export HOMEBREW_NO_AUTO_UPDATE=1

#
# Programming languages
#

# Python
test -d $HOME/.poetry/bin/ && export PATH="$HOME/.poetry/bin:$PATH"

# Dotnet
DOTNET_VERSION=$(dotnet --version)
test -d $HOME/.dotnet/tools && export PATH="$PATH:/Users/aa646/.dotnet/tools"
# Fix for VSCode using asdf -> https://github.com/OmniSharp/omnisharp-vscode/issues/3450#issuecomment-631127738
test -d $ASDF_DIR/installs/dotnet-core/$DOTNET_VERSION && export MSBuildSDKsPath=$ASDF_DIR/installs/dotnet-core/$DOTNET_VERSION/sdk/$DOTNET_VERSION/Sdks

# Elixir
test -d $HOME/.local/opt/elixir-ls && export ELS_INSTALL_PREFIX="$HOME/.local/opt/elixir-ls"
export ERL_AFLAGS="-kernel shell_history enabled -kernel shell_history_file_bytes 1024000"

# Emacs
export DOOMDIR=$HOME/.doom.d
test -d $HOME/.emacs.d-doom/bin && export PATH="$HOME/.emacs.d-doom/bin:$PATH"

export SPACEMACSDIR=$HOME/.spacemacs.d
test -d $HOME/.emacs.d-spacemacs/bin && export PATH="$HOME/.emacs.d-spacemacs/bin:$PATH"

if [ -f "/Applications/Emacs.app/Contents/MacOS/Emacs" ]; then
    export EMACS="/Applications/Emacs.app/Contents/MacOS/Emacs"
    alias emacs="$EMACS -nw"
fi
if [ -f "/Applications/Emacs.app/Contents/MacOS/bin/emacsclient" ]; then
    alias emacsclient="/Applications/Emacs.app/Contents/MacOS/bin/emacsclient"
fi

export ALTERNATE_EDITOR=""
export EDITOR="emacsclient -t -a emacs -nw"     # $EDITOR should open in terminal
export VISUAL="emacsclient -a emacs -n"         # $VISUAL opens in GUI with non-daemon as alternate

# GPG Magic
export SSH_AUTH_SOCK="$(/usr/local/MacGPG2/bin/gpgconf --list-dirs agent-ssh-socket)"
export GPG_AGENT_INFO="$(/usr/local/MacGPG2/bin/gpgconf --list-dirs agent-socket):$(pgrep gpg-agent):1"

#
# Aliases
#
alias grep="grep --color=auto" 2>/dev/null
alias egrep="egrep --color=auto" 2>/dev/null
alias fgrep="fgrep --color=auto" 2>/dev/null
# alias ls="ls -G" 2>/dev/null
alias sl="ls" 2>/dev/null
alias ll="ls -l" 2>/dev/null
alias la="ls -A" 2>/dev/null
alias l="ls -CF" 2>/dev/null
alias cls="clear" 2>/dev/null
alias cp="cp -v" 2>/dev/null
alias mv="mv -v" 2>/dev/null
alias tm="tmux" 2>/dev/null
alias td="tmux detach" 2>/dev/null
alias gs="git status --short" 2>/dev/null
alias vim="vi -v" 2>/dev/null
alias pe="pipenv" 2>/dev/null
alias mx=$VISUAL 2>/dev/null
alias e=$EDITOR 2>/dev/null

# Source secrets file
source ~/.dotfiles/zsh/.zshenv-secrets

#
# User configuration
#
export SSH_KEY_PATH="~/.ssh/rsa_id"     # Default ssh key

# added by Nix installer
if [ -e /Users/aa646/.nix-profile/etc/profile.d/nix.sh ]; then . /Users/aa646/.nix-profile/etc/profile.d/nix.sh; fi
